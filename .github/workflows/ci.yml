name: Full Stack CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  NODE_ENV: production
  NEXT_TELEMETRY_DISABLED: 1

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ matrix.directory }}

    strategy:
      matrix:
        directory: [ './backend', './frontend' ]

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ${{ matrix.directory }}/package-lock.json

      - name: 🔍 Verify critical files
        run: |
          if [ "${{ matrix.directory }}" = "./frontend" ]; then
            [ -f "eslint.config.mjs" ] || (echo "::error::ESLint config missing" && exit 1)
          fi
          [ -f "package-lock.json" ] || (echo "::error::package-lock.json missing" && exit 1)

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧹 Lint code
        if: matrix.directory == './frontend'
        run: npx eslint . --config eslint.config.mjs --max-warnings=0 --report-unused-disable-directives

      - name: ✅ Run tests
        run: npm test -- --watchAll=false --ci || echo "No tests configured"

      - name: 🏗 Build project
        run: npm run build || echo "No build script"
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"

      - name: 🏷 Upload artifacts
        if: github.ref == 'refs/heads/main' && matrix.directory == './frontend'
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: |
            frontend/.next
            frontend/public

  deploy:
    name: Deploy to Production
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: 📥 Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: frontend

      - name: 🚀 Trigger Render Deploy
        run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}